{"version":3,"sources":["Images/udemyIcon.png","Images/udemy.gif","Images/meme.jpg","Images/portfolio.png","Images/portfolio.gif","Images/me.jpg","Constants/theme.js","Components/NavigationBar.js","Components/ProjectCard.js","Constants/projectData.js","Pages/HomePage.js","Pages/ProjectPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createMuiTheme","typography","fontFamily","join","palette","primary","main","secondary","light","contrastText","contrastThreshold","tonalOffset","headerVariants","hidden","y","opacity","visible","transition","type","duration","delay","ease","stiffness","NavigationBar","header","style","position","top","width","overflow","backgroundColor","zIndex","variants","initial","animate","Grid","container","justify","spacing","item","xs","Button","color","Link","to","component","routerLink","fontSize","textDecoration","href","target","margin","buttonVariants","boxShadow","hover","scale","tap","useStyles","makeStyles","ProjectCard","props","data","classes","id","div","class","whileHover","whileTap","backgroundImage","gif","url","title","_","map","chips","chip","Chip","label","size","className","marginTop","description","projectData","memetelegrambot","details","projectLink","meme","udemycourse","udemyIcon","udemyGif","personalportfolio","portfolioImage","portfolioGif","nameVariants","containerVariants","x","exit","HomePage","Container","maxWidth","borderRadius","src","me","Typography","variant","sm","md","mass","damping","when","staggerChildren","ProjectPage","match","useState","params","projectDetails","useEffect","setTimeout","window","scrollTo","App","location","useLocation","ThemeProvider","theme","exitBeforeEnter","key","pathname","exact","path","Boolean","hostname","ReactDOM","render","StrictMode","Helmet","rel","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.74da1821.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/udemyIcon.4911145c.png\";","module.exports = __webpack_public_path__ + \"static/media/udemy.14eadaa6.gif\";","module.exports = __webpack_public_path__ + \"static/media/meme.e4aa8bce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/portfolio.8c6b0966.png\";","module.exports = __webpack_public_path__ + \"static/media/portfolio.56648c66.gif\";","module.exports = __webpack_public_path__ + \"static/media/me.db401232.jpg\";","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\"Barlow\", \"sans-serif\"].join(\",\"),\r\n  },\r\n  palette: {\r\n    primary: {\r\n      // light: will be calculated from palette.primary.main,\r\n      main: \"#ff4400\",\r\n      // dark: will be calculated from palette.primary.main,\r\n      // contrastText: will be calculated to contrast with palette.primary.main\r\n    },\r\n    secondary: {\r\n      light: \"#0066ff\",\r\n      main: \"#0044ff\",\r\n      // dark: will be calculated from palette.secondary.main,\r\n      contrastText: \"#ffcc00\",\r\n    },\r\n    // Used by `getContrastText()` to maximize the contrast between\r\n    // the background and the text.\r\n    contrastThreshold: 3,\r\n    // Used by the functions below to shift a color's luminance by approximately\r\n    // two indexes within its tonal palette.\r\n    // E.g., shift from Red 500 to Red 300 or Red 700.\r\n    tonalOffset: 0.2,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Grid, Container, Button } from \"@material-ui/core\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { Link as routerLink } from \"react-router-dom\";\r\n\r\nconst headerVariants = {\r\n  hidden: {\r\n    y: \"-60vh\",\r\n    opacity: 0,\r\n  },\r\n  visible: {\r\n    y: \"0\",\r\n    opacity: 1,\r\n    transition: {\r\n      type: \"spring\",\r\n      duration: 4,\r\n      delay: 0.8,\r\n      ease: \"easeInOut\",\r\n      stiffness: 120,\r\n    },\r\n  },\r\n};\r\n\r\nexport default function NavigationBar() {\r\n  return (\r\n    <motion.header\r\n      style={{ position: \"fixed\", top: 0, width: \"100%\", overflow: \"hidden\", backgroundColor: \"#F4F6FC\", zIndex: \"11\" }}\r\n      variants={headerVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n    >\r\n      <Grid container justify=\"space-around\" spacing={10}>\r\n        <Grid item xs={4}>\r\n          <Button color=\"black\">\r\n            <Link to={\"/\"} component={routerLink} style={{ color: \"black\", fontSize: \"20px\", textDecoration: \"none\" }}>\r\n              Mark Tan\r\n            </Link>\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item xs={4} />\r\n\r\n        <Grid item xs={4}>\r\n          <Button color=\"black\">\r\n            <Link href=\"https://github.com/marktanrj\" style={{ color: \"black\", fontSize: \"20px\", textDecoration: \"none\" }} target=\"_blank\">\r\n              Github\r\n            </Link>\r\n          </Button>\r\n          <span style={{ margin: \"10px\" }} />\r\n          <Button color=\"black\">\r\n            <Link\r\n              href=\"https://www.linkedin.com/in/marktanrj/\"\r\n              style={{ color: \"black\", fontSize: \"20px\", textDecoration: \"none\" }}\r\n              target=\"_blank\"\r\n            >\r\n              Linkedin\r\n            </Link>\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </motion.header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid, Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n\r\nimport \"./card.css\";\r\n\r\nconst buttonVariants = {\r\n  visible: {\r\n    boxShadow: \" 0px 10px 20px rgba(0, 0, 0, 0.11)\",\r\n  },\r\n  hover: {\r\n    scale: 1.07,\r\n    boxShadow: \" 0px 10px 20px rgba(0, 0, 0, 0.25)\",\r\n    transition: { duration: 0.3 },\r\n  },\r\n  tap: {\r\n    scale: 0.96,\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles({});\r\n\r\nexport default function ProjectCard(props) {\r\n  const { data } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Link to={`/project/${data.id}`} style={{ textDecoration: \"none\" }}>\r\n      <div style={{ position: \"relative\" }}>\r\n        <motion.div class=\"card\" variants={buttonVariants} initial=\"visible\" whileHover=\"hover\" whileTap=\"tap\">\r\n          <div\r\n            class=\"card-image-gif\"\r\n            style={{\r\n              backgroundImage: `url(${data.gif})`,\r\n            }}\r\n          ></div>\r\n          <div\r\n            class=\"card-image\"\r\n            style={{\r\n              backgroundImage: `url(${data.url})`,\r\n            }}\r\n          ></div>\r\n          <div class=\"card-description\">\r\n            <h4 style={{ margin: \"3px\", color: \"black\" }}>{data.title}</h4>\r\n            <div>\r\n              {_.map(data.chips, (chip) => (\r\n                <Chip label={chip} size=\"small\" style={{ margin: 1 }} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n            <p style={{ marginTop: \"10px\", color: \"black\", fontSize: \"11px\" }}>{data.description}</p>\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import udemyIcon from \"../Images/udemyIcon.png\";\r\nimport udemyGif from \"../Images/udemy.gif\";\r\nimport meme from \"../Images/meme.jpg\";\r\nimport portfolioImage from \"../Images/portfolio.png\";\r\nimport portfolioGif from \"../Images/portfolio.gif\";\r\n\r\nexport const projectData = {\r\n  memetelegrambot: {\r\n    id: \"memetelegrambot\",\r\n    title: \"Meme Telegram Bot\",\r\n    description: \"Generate memes directly in Telegram Chats\",\r\n    details: \"Generate memes directly in Telegram Chats\",\r\n    projectLink: \"https://t.me/themememakerbot\",\r\n    chips: [\"Node.js\", \"AWS Lambda\", \"Telegraf\", \"Jimp\"],\r\n    url: meme,\r\n    gif: \"https://i.imgur.com/YUjoAax.gif\",\r\n  },\r\n  udemycourse: {\r\n    id: \"udemycourse\",\r\n    title: \"Udemy Course (Telegram Bots)\",\r\n    description: \"5.5 hours of tutorial building Telegram bots with Javascript and Node.js\",\r\n    details: \"5.5 hours of tutorial building Telegram bots with Javascript and Node.js\",\r\n    projectLink: \"https://www.udemy.com/course/build-telegram-bots-with-javascript-the-complete-guide/\",\r\n    chips: [\"Node.js\", \"JavaScript\"],\r\n    url: udemyIcon,\r\n    gif: udemyGif,\r\n  },\r\n  personalportfolio: {\r\n    id: \"personalportfolio\",\r\n    title: \"Portfolio Website\",\r\n    description: \"Showcase my projects\",\r\n    details: \"Showcase my projects\",\r\n    projectLink: \"https://github.com/marktanrj/marktanrj.github.io\",\r\n    chips: [\"React\", \"Framer Motion\"],\r\n    url: portfolioImage,\r\n    gif: portfolioGif,\r\n  },\r\n};\r\n","import React from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Grid, Container } from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\nimport _ from \"lodash\";\r\n\r\nimport ProjectCard from \"../Components/ProjectCard\";\r\nimport { projectData } from \"../Constants/projectData\";\r\nimport me from \"../Images/me.jpg\";\r\n\r\nconst nameVariants = {\r\n  hidden: {\r\n    y: \"-20vh\",\r\n    opacity: 0,\r\n  },\r\n  visible: {\r\n    y: \"0\",\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.4,\r\n      type: \"spring\",\r\n      duration: 3,\r\n      ease: \"easeInOut\",\r\n      stiffness: 100,\r\n    },\r\n  },\r\n};\r\n\r\nconst containerVariants = {\r\n  hidden: {\r\n    x: \"-100vw\",\r\n  },\r\n  visible: {\r\n    x: 0,\r\n    transition: {\r\n      type: \"spring\",\r\n      duration: 3,\r\n      ease: \"easeIn\",\r\n      stiffness: 50,\r\n    },\r\n  },\r\n  exit: {\r\n    x: \"-100vw\",\r\n    transition: {\r\n      ease: \"easeInOut\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <motion.div variants={containerVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\">\r\n      <Container maxWidth=\"md\">\r\n        <Grid container spacing={5}>\r\n          <Grid item xs={12}>\r\n            <motion.div variants={nameVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\">\r\n              <img style={{ borderRadius: \"100px\" }} src={me} width=\"130px\" />\r\n              <Typography style={{ marginTop: \"10px\" }} variant=\"h4\">\r\n                Mark Tan\r\n              </Typography>\r\n              <Typography style={{ marginTop: \"5px\", fontFamily: \"roboto\" }} variant=\"h6\">\r\n                Final Year Student | Software Engineer\r\n              </Typography>\r\n            </motion.div>\r\n          </Grid>\r\n          {_.map(projectData, (item) => {\r\n            return (\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <ProjectCard data={item} />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n    </motion.div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { motion } from \"framer-motion\";\r\nimport { projectData } from \"../Constants/projectData\";\r\nimport { Grid, Container, Button } from \"@material-ui/core\";\r\n\r\nconst containerVariants = {\r\n  hidden: {\r\n    opacity: 0,\r\n    x: \"100vw\",\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n    x: 0,\r\n    transition: { type: \"spring\", mass: 0.4, damping: 8, when: \"beforeChildren\", staggerChildren: 0.4 },\r\n  },\r\n  exit: {\r\n    x: \"100vw\",\r\n    transition: {\r\n      ease: \"easeInOut\",\r\n    },\r\n  },\r\n};\r\nexport default function ProjectPage({ match }) {\r\n  const [projectDetails, __] = useState(projectData[match.params.id]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      window.scrollTo(0, 0);\r\n    }, 500);\r\n  }, []);\r\n\r\n  return (\r\n    <motion.div variants={containerVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\">\r\n      <Container maxWidth=\"md\">\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <h2>{projectDetails && projectDetails.title}</h2>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {projectDetails && projectDetails.projectLink && (\r\n              <Button component=\"a\" href={projectDetails && projectDetails.projectLink} target=\"_blank\" variant=\"contained\" color=\"primary\">\r\n                Project Link\r\n              </Button>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <img src={projectDetails.gif} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <p>{projectDetails && projectDetails.details}</p>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </motion.div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Link, useLocation, Redirect } from \"react-router-dom\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./Constants/theme\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport NavigationBar from \"./Components/NavigationBar\";\nimport HomePage from \"./Pages/HomePage\";\nimport ProjectPage from \"./Pages/ProjectPage\";\n\nfunction App() {\n  const location = useLocation();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <NavigationBar />\n        <div style={{ marginTop: \"60px\" }}>\n          <AnimatePresence exitBeforeEnter>\n            <Switch location={location} key={location.pathname}>\n              <Route exact path=\"/\" component={HomePage} />\n              <Route exact path=\"/project\" component={HomePage} />\n              <Route exact path=\"/project/:id\" component={ProjectPage} />\n            </Switch>\n          </AnimatePresence>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Helmet>\n      <link href=\"https://fonts.googleapis.com/css2?family=Barlow&display=swap\" rel=\"stylesheet\" />\n    </Helmet>\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}