{"version":3,"sources":["Images/udemyIcon.png","Images/udemy.gif","Images/meme.jpg","Images/portfolio.png","Images/portfolio.gif","Images/me.jpg","Constants/theme.js","Components/NavigationBar.js","Components/ProjectCard.js","Constants/projectData.js","Pages/HomePage.js","Pages/ProjectPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createMuiTheme","typography","fontFamily","join","palette","primary","main","secondary","light","contrastText","contrastThreshold","tonalOffset","headerVariants","hidden","y","opacity","visible","transition","type","duration","delay","ease","stiffness","useStyles","makeStyles","theme","header","position","top","width","zIndex","drawer","breakpoints","up","flexShrink","appBar","backgroundColor","color","margin","menuButton","marginRight","spacing","display","toolbar","minHeight","drawerPaper","content","flexGrow","padding","closeMenuButton","marginLeft","link","fontSize","NavigationBar","classes","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","List","ListItem","component","button","href","target","key","ListItemText","className","variants","initial","animate","AppBar","elevation","Toolbar","IconButton","aria-label","edge","onClick","Grid","justify","container","item","Button","Link","to","routerLink","style","textDecoration","Hidden","xsDown","implementation","smUp","Drawer","variant","anchor","direction","open","onClose","paper","ModalProps","keepMounted","buttonVariants","boxShadow","hover","scale","tap","ProjectCard","props","data","id","div","whileHover","whileTap","backgroundImage","gif","url","title","_","map","chips","chip","index","Chip","label","size","marginTop","description","projectData","memetelegrambot","details","projectLink","meme","udemycourse","udemyIcon","udemyGif","personalportfolio","portfolioImage","portfolioGif","nameVariants","containerVariants","x","exit","HomePage","Container","maxWidth","xs","borderRadius","src","me","alt","Typography","sm","md","mass","damping","when","staggerChildren","ProjectPage","match","params","projectDetails","App","location","useLocation","useLayoutEffect","defer","window","scrollTo","pathname","ThemeProvider","exitBeforeEnter","exact","path","Boolean","hostname","ReactDOM","render","StrictMode","Helmet","rel","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3b98b49f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/udemyIcon.4911145c.png\";","module.exports = __webpack_public_path__ + \"static/media/udemy.14eadaa6.gif\";","module.exports = __webpack_public_path__ + \"static/media/meme.e4aa8bce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/portfolio.8c6b0966.png\";","module.exports = __webpack_public_path__ + \"static/media/portfolio.5e9ce0cf.gif\";","module.exports = __webpack_public_path__ + \"static/media/me.db401232.jpg\";","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\"Barlow\", \"sans-serif\"].join(\",\"),\r\n  },\r\n  palette: {\r\n    primary: {\r\n      // light: will be calculated from palette.primary.main,\r\n      main: \"#ff4400\",\r\n      // dark: will be calculated from palette.primary.main,\r\n      // contrastText: will be calculated to contrast with palette.primary.main\r\n    },\r\n    secondary: {\r\n      light: \"#0066ff\",\r\n      main: \"#0044ff\",\r\n      // dark: will be calculated from palette.secondary.main,\r\n      contrastText: \"#ffcc00\",\r\n    },\r\n    // Used by `getContrastText()` to maximize the contrast between\r\n    // the background and the text.\r\n    contrastThreshold: 3,\r\n    // Used by the functions below to shift a color's luminance by approximately\r\n    // two indexes within its tonal palette.\r\n    // E.g., shift from Red 500 to Red 300 or Red 700.\r\n    tonalOffset: 0.2,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { Link as routerLink } from \"react-router-dom\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst headerVariants = {\r\n  hidden: {\r\n    y: \"-60vh\",\r\n    opacity: 0,\r\n  },\r\n  visible: {\r\n    y: \"0\",\r\n    opacity: 1,\r\n    transition: {\r\n      type: \"spring\",\r\n      duration: 4,\r\n      delay: 0.8,\r\n      ease: \"easeInOut\",\r\n      stiffness: 120,\r\n    },\r\n  },\r\n};\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    width: \"100%\",\r\n    zIndex: 20,\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    backgroundColor: \"#F4F6FC\",\r\n    color: \"black\",\r\n    margin: 0,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  toolbar: {\r\n    minHeight: \"50px\",\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  closeMenuButton: {\r\n    marginRight: \"auto\",\r\n    marginLeft: 0,\r\n  },\r\n  link: {\r\n    color: \"black\",\r\n    fontSize: \"20px\",\r\n  },\r\n}));\r\n\r\nexport default function NavigationBar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  function handleDrawerToggle() {\r\n    setMobileOpen(!mobileOpen);\r\n  }\r\n\r\n  const drawer = (\r\n    <div>\r\n      <List>\r\n        <ListItem component=\"a\" button href=\"https://github.com/marktanrj\" target=\"_blank\" key=\"github\">\r\n          <ListItemText primary={\"Github\"} />\r\n        </ListItem>\r\n        <ListItem component=\"a\" button href=\"https://www.linkedin.com/in/marktanrj/\" target=\"_blank\" key=\"linkedin\">\r\n          <ListItemText primary={\"Linkedin\"} />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <motion.header className={classes.header} variants={headerVariants} initial=\"hidden\" animate=\"visible\">\r\n      <AppBar position=\"fixed\" className={classes.appBar} elevation={1}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton color=\"inherit\" aria-label=\"Open drawer\" edge=\"start\" onClick={handleDrawerToggle} className={classes.menuButton}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Grid justify=\"space-around\" container>\r\n            <Grid item>\r\n              <Button>\r\n                <Link to={\"/\"} component={routerLink} className={classes.link} style={{ textDecoration: \"none\" }}>\r\n                  Mark Tan\r\n                </Link>\r\n              </Button>\r\n            </Grid>\r\n            <Hidden xsDown implementation=\"css\">\r\n              <Grid item>\r\n                <Button>\r\n                  <Link href=\"https://github.com/marktanrj\" target=\"_blank\" className={classes.link} style={{ textDecoration: \"none\" }}>\r\n                    Github\r\n                  </Link>\r\n                </Button>\r\n                <span style={{ marginLeft: \"10px\" }} />\r\n                <Button>\r\n                  <Link\r\n                    href=\"https://www.linkedin.com/in/marktanrj/\"\r\n                    target=\"_blank\"\r\n                    className={classes.link}\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    Linkedin\r\n                  </Link>\r\n                </Button>\r\n              </Grid>\r\n            </Hidden>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <nav className={classes.drawer}>\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            <IconButton onClick={handleDrawerToggle} className={classes.closeMenuButton}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        {/* <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n          >\r\n            <div className={classes.toolbar} />\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden> */}\r\n      </nav>\r\n      <Toolbar className={classes.toolbar} />\r\n    </motion.header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n\r\nimport \"./card.css\";\r\n\r\nconst buttonVariants = {\r\n  visible: {\r\n    boxShadow: \" 0px 10px 20px rgba(0, 0, 0, 0.11)\",\r\n  },\r\n  hover: {\r\n    scale: 1.07,\r\n    boxShadow: \" 0px 10px 20px rgba(0, 0, 0, 0.25)\",\r\n    transition: { duration: 0.3 },\r\n  },\r\n  tap: {\r\n    scale: 0.96,\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles({});\r\n\r\nexport default function ProjectCard(props) {\r\n  const { data } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Link to={`/project/${data.id}`} style={{ textDecoration: \"none\" }}>\r\n      <div style={{ position: \"relative\" }}>\r\n        <motion.div className=\"card\" variants={buttonVariants} initial=\"visible\" whileHover=\"hover\" whileTap=\"tap\">\r\n          <div\r\n            className=\"card-image-gif\"\r\n            style={{\r\n              backgroundImage: `url(${data.gif})`,\r\n            }}\r\n          ></div>\r\n          <div\r\n            className=\"card-image\"\r\n            style={{\r\n              backgroundImage: `url(${data.url})`,\r\n            }}\r\n          ></div>\r\n          <div className=\"card-description\">\r\n            <h4 style={{ margin: \"3px\", color: \"black\" }}>{data.title}</h4>\r\n            <div>\r\n              {_.map(data.chips, (chip, index) => (\r\n                <Chip key={`${chip}-${index}`} label={chip} size=\"small\" style={{ margin: 1 }} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n            <p style={{ marginTop: \"10px\", color: \"black\", fontSize: \"11px\" }}>{data.description}</p>\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import udemyIcon from \"../Images/udemyIcon.png\";\r\nimport udemyGif from \"../Images/udemy.gif\";\r\nimport meme from \"../Images/meme.jpg\";\r\nimport portfolioImage from \"../Images/portfolio.png\";\r\nimport portfolioGif from \"../Images/portfolio.gif\";\r\n\r\nexport const projectData = {\r\n  memetelegrambot: {\r\n    id: \"memetelegrambot\",\r\n    title: \"Meme Telegram Bot\",\r\n    description: \"Generate memes directly in Telegram Chats\",\r\n    details: \"Generate memes directly in Telegram Chats\",\r\n    projectLink: \"https://t.me/themememakerbot\",\r\n    chips: [\"Node.js\", \"AWS Lambda\", \"Telegraf\", \"Jimp\"],\r\n    url: meme,\r\n    gif: \"https://i.imgur.com/YUjoAax.gif\",\r\n  },\r\n  udemycourse: {\r\n    id: \"udemycourse\",\r\n    title: \"Udemy Course (Telegram Bots)\",\r\n    description: \"5.5 hours of tutorial building Telegram bots with Javascript and Node.js\",\r\n    details: \"5.5 hours of tutorial building Telegram bots with Javascript and Node.js\",\r\n    projectLink: \"https://www.udemy.com/course/build-telegram-bots-with-javascript-the-complete-guide/\",\r\n    chips: [\"Node.js\", \"JavaScript\"],\r\n    url: udemyIcon,\r\n    gif: udemyGif,\r\n  },\r\n  personalportfolio: {\r\n    id: \"personalportfolio\",\r\n    title: \"Portfolio Website\",\r\n    description: \"Showcase my projects\",\r\n    details: \"Showcase my projects\",\r\n    projectLink: \"https://github.com/marktanrj/marktanrj.github.io\",\r\n    chips: [\"React\", \"Framer Motion\"],\r\n    url: portfolioImage,\r\n    gif: portfolioGif,\r\n  },\r\n};\r\n","import React from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid, Container } from \"@material-ui/core\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nimport _ from \"lodash\";\r\n\r\nimport ProjectCard from \"../Components/ProjectCard\";\r\nimport { projectData } from \"../Constants/projectData\";\r\nimport me from \"../Images/me.jpg\";\r\n\r\nconst nameVariants = {\r\n  hidden: {\r\n    y: \"-20vh\",\r\n    opacity: 0,\r\n  },\r\n  visible: {\r\n    y: \"0\",\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.4,\r\n      type: \"spring\",\r\n      duration: 3,\r\n      ease: \"easeInOut\",\r\n      stiffness: 100,\r\n    },\r\n  },\r\n};\r\n\r\nconst containerVariants = {\r\n  hidden: {\r\n    x: \"-100vw\",\r\n  },\r\n  visible: {\r\n    x: 0,\r\n    transition: {\r\n      type: \"spring\",\r\n      duration: 3,\r\n      ease: \"easeIn\",\r\n      stiffness: 50,\r\n    },\r\n  },\r\n  exit: {\r\n    x: \"-100vw\",\r\n    transition: {\r\n      ease: \"easeInOut\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <motion.div variants={containerVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\">\r\n      <Container maxWidth=\"md\">\r\n        <Grid container spacing={5}>\r\n          <Grid item xs={12}>\r\n            <motion.div variants={nameVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\">\r\n              <img style={{ borderRadius: \"100px\" }} src={me} width=\"130px\" alt=\"profile-pic\" />\r\n              <Typography style={{ marginTop: \"10px\" }} variant=\"h4\">\r\n                Mark Tan\r\n              </Typography>\r\n              <Typography style={{ marginTop: \"5px\", fontFamily: \"roboto\" }} variant=\"h6\">\r\n                Final Year Information Systems Student\r\n              </Typography>\r\n            </motion.div>\r\n          </Grid>\r\n          {_.map(projectData, (item) => {\r\n            return (\r\n              <Grid item xs={12} sm={6} md={4} key={item.id}>\r\n                <ProjectCard data={item} />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n    </motion.div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { projectData } from \"../Constants/projectData\";\r\nimport { Grid, Container, Button } from \"@material-ui/core\";\r\n\r\nconst containerVariants = {\r\n  hidden: {\r\n    opacity: 0,\r\n    x: \"100vw\",\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n    x: 0,\r\n    transition: { type: \"spring\", mass: 0.4, damping: 8, when: \"beforeChildren\", staggerChildren: 0.4 },\r\n  },\r\n  exit: {\r\n    x: \"100vw\",\r\n    transition: {\r\n      ease: \"easeInOut\",\r\n    },\r\n  },\r\n};\r\nexport default function ProjectPage({ match }) {\r\n  const [projectDetails] = useState(projectData[match.params.id]);\r\n\r\n  return (\r\n    <motion.div variants={containerVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\">\r\n      <Container>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <h2>{projectDetails && projectDetails.title}</h2>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {projectDetails && projectDetails.projectLink && (\r\n              <Button component=\"a\" href={projectDetails && projectDetails.projectLink} target=\"_blank\" variant=\"contained\" color=\"primary\">\r\n                Project Link\r\n              </Button>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <img src={projectDetails.gif} alt=\"project-details\" />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <p>{projectDetails && projectDetails.details}</p>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </motion.div>\r\n  );\r\n}\r\n","import React, { useLayoutEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { Switch, Route, useLocation } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport theme from \"./Constants/theme\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\n\r\nimport NavigationBar from \"./Components/NavigationBar\";\r\nimport HomePage from \"./Pages/HomePage\";\r\nimport ProjectPage from \"./Pages/ProjectPage\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  useLayoutEffect(() => {\r\n    _.defer(() => {\r\n      window.scrollTo(0, 0);\r\n    }, []);\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        <NavigationBar />\r\n        <div style={{ marginTop: \"60px\" }}>\r\n          <AnimatePresence exitBeforeEnter>\r\n            <Switch location={location} key={location.pathname}>\r\n              <Route exact path=\"/\" component={HomePage} />\r\n              <Route exact path=\"/project\" component={HomePage} />\r\n              <Route exact path=\"/project/:id\" component={ProjectPage} />\r\n            </Switch>\r\n          </AnimatePresence>\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Helmet>\r\n      <link href=\"https://fonts.googleapis.com/css2?family=Barlow&display=swap\" rel=\"stylesheet\" />\r\n    </Helmet>\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}